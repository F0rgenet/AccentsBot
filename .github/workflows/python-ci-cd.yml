name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install --no-cache-dir --upgrade pip
        pip install --no-cache-dir -r requirements.txt

    - name: Run tests

      run: python -m unittest discover

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/accents-telegram-bot:latest

  Deploy:
    runs-on: ubuntu-latest
    needs: Build

    env:
      PROJECT_DIRECTORY: "/projects/Accents"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.5
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Stop and remove container
      run: |
        docker stop accents || true
        docker rm accents || true
    
    - name: Pull docker image
      run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/accents-telegram-bot:latest

    - name: Define Mounts
      id: define-mounts
      run: |
        mount_configs="--mount type=bind,source=/telegram_bot/config.ini,target=${{ env.PROJECT_DIRECTORY }}/configs/bot_config.ini"
        mount_logs="--mount type=bind,source=/logs/accents.log,target=${{ env.PROJECT_DIRECTORY }}/logs/accents.log"
        mount_databases="--mount type=bind,source=/database.db,target=${{ env.PROJECT_DIRECTORY }}/databases/database.db"
        echo "::set-output name=mount-options::${mount_configs} ${mount_logs} ${mount_databases}"

    - name: Create .env
      run: |
        echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > $PROJECT_DIRECTORY/.env
      working-directory: $PROJECT_DIRECTORY

    - name: Run Docker container
      run: |
        docker run -d -p 80:80 --name accents ${{ steps.define-mounts.outputs.mount_options }} ${{ secrets.DOCKERHUB_USERNAME }}/accents-telegram-bot:latest
